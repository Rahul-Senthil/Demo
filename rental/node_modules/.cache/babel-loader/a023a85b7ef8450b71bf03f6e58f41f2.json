{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\rental-app\\\\rental\\\\src\\\\components\\\\EditPost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  const [user, setUser] = useState();\n  const [files, setFiles] = useState([]);\n  const [img, setImg] = useState([]);\n  const updatedImg = useState([]);\n  const doDeleteImg = useState([]);\n  const address = /*#__PURE__*/React.createRef();\n  const mobile = /*#__PURE__*/React.createRef();\n  const rent = /*#__PURE__*/React.createRef();\n  const description = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    const fetchPost = async () => {\n      console.log(\"Post id: \", id);\n      const token = localStorage.getItem(\"secretToken\");\n      console.log(token);\n\n      if (token) {\n        const user = jwtDecode(token);\n        console.log(\"user id: \", user.currentUser);\n        setUser(user.currentUser);\n      } else {\n        window.location.href = '/home';\n      }\n\n      await axios.get(`http://localhost:8000/specific-post/${id}`).then(res => {\n        setPost(res.data);\n        setImg(res.data.imgUrl);\n      }).catch(err => console.log(err));\n    };\n\n    fetchPost();\n  }, []);\n\n  const onFileUpload = e => {\n    setFiles(e.target.files);\n  };\n\n  const editPost = async e => {\n    e.preventDefault();\n    console.log(\"Clicked\");\n    updatedImg.length = 0;\n    doDeleteImg.length = 0;\n    const imgs = document.getElementsByName(\"deleteImg\");\n\n    for (let i = 0; i < img.length; i++) {\n      console.log(imgs[i].checked);\n\n      if (imgs[i].checked !== true) {\n        console.log(img[i]);\n        updatedImg.push(img[i]);\n      } else {\n        doDeleteImg.push(img[i]);\n      }\n    }\n\n    console.log(doDeleteImg);\n    console.log(updatedImg);\n    const formData = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"image\", files[i]);\n    }\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    await axios.post(\"http://localhost:8000/generate-url\", formData, config).then(res => {\n      console.log(res.data);\n\n      for (let i = 0; i < res.data.length; i++) {\n        updatedImg.push({\n          filename: res.data[i].filename,\n          url: res.data[i].path\n        });\n        console.log(updatedImg);\n      }\n\n      const newPost = {\n        author_id: user,\n        address: address.current.value,\n        mobile: mobile.current.value,\n        rent: rent.current.value,\n        description: description.current.value,\n        imgUrl: updatedImg // date: new Date()\n\n      };\n      console.log(newPost);\n      axios.post('http://localhost:8000/delete-img-cloudinary', doDeleteImg).then(res => {}).catch(err => console.log(err));\n      axios.post(`http://localhost:8000/edit-post/${id}`, newPost).then(res => {\n        console.log(res.data);\n        window.location.href = `/account/${user}`;\n      }).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: post.address,\n      ref: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 77\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: post.mobile,\n      ref: mobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 75\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: post.rent,\n      ref: rent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 65\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 71\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: post.description,\n      ref: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      id: \"\",\n      onChange: onFileUpload,\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 81\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 87\n    }, this), img.map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: i.url,\n        alt: \"\",\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"deleteImg\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editPost,\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"s+YJbh0SAm4P2e1fKEdEDGrMvsk=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/React Projects/rental-app/rental/src/components/EditPost.jsx"],"names":["axios","jwtDecode","React","useEffect","useState","useParams","EditPost","id","post","setPost","user","setUser","files","setFiles","img","setImg","updatedImg","doDeleteImg","address","createRef","mobile","rent","description","fetchPost","console","log","token","localStorage","getItem","currentUser","window","location","href","get","then","res","data","imgUrl","catch","err","onFileUpload","e","target","editPost","preventDefault","length","imgs","document","getElementsByName","i","checked","push","formData","FormData","append","config","headers","filename","url","path","newPost","author_id","current","value","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAMY,UAAU,GAAGZ,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAMa,WAAW,GAAGb,QAAQ,CAAC,EAAD,CAA5B;AAEA,QAAMc,OAAO,gBAAGhB,KAAK,CAACiB,SAAN,EAAhB;AACA,QAAMC,MAAM,gBAAGlB,KAAK,CAACiB,SAAN,EAAf;AACA,QAAME,IAAI,gBAAGnB,KAAK,CAACiB,SAAN,EAAb;AACA,QAAMG,WAAW,gBAAGpB,KAAK,CAACiB,SAAN,EAApB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoB,SAAS,GAAE,YAAW;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBlB,EAAzB;AACA,YAAMmB,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAd;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;;AACA,UAAGA,KAAH,EACA;AACI,cAAMhB,IAAI,GAAGT,SAAS,CAACyB,KAAD,CAAtB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBf,IAAI,CAACmB,WAA9B;AACAlB,QAAAA,OAAO,CAACD,IAAI,CAACmB,WAAN,CAAP;AACH,OALD,MAMI;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,OAAvB;AACH;;AACD,YAAMhC,KAAK,CAACiC,GAAN,CAAW,uCAAsC1B,EAAG,EAApD,EACL2B,IADK,CACAC,GAAG,IAAI;AACT1B,QAAAA,OAAO,CAAC0B,GAAG,CAACC,IAAL,CAAP;AACArB,QAAAA,MAAM,CAACoB,GAAG,CAACC,IAAJ,CAASC,MAAV,CAAN;AACH,OAJK,EAMLC,KANK,CAMCC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CANR,CAAN;AAOH,KApBG;;AAqBJhB,IAAAA,SAAS;AACZ,GAvBY,EAuBX,EAvBW,CAAT;;AAwBA,QAAMiB,YAAY,GAAIC,CAAD,IAAO;AACxB5B,IAAAA,QAAQ,CAAC4B,CAAC,CAACC,MAAF,CAAS9B,KAAV,CAAR;AACH,GAFD;;AAIA,QAAM+B,QAAQ,GAAG,MAAMF,CAAN,IAAY;AACzBA,IAAAA,CAAC,CAACG,cAAF;AACApB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,IAAAA,UAAU,CAAC6B,MAAX,GAAoB,CAApB;AACA5B,IAAAA,WAAW,CAAC4B,MAAZ,GAAqB,CAArB;AACA,UAAMC,IAAI,GAAGC,QAAQ,CAACC,iBAAT,CAA2B,WAA3B,CAAb;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACnC,GAAG,CAAC+B,MAAlB,EAAyBI,CAAC,EAA1B,EACA;AACIzB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAI,CAACG,CAAD,CAAJ,CAAQC,OAApB;;AACA,UAAGJ,IAAI,CAACG,CAAD,CAAJ,CAAQC,OAAR,KAAoB,IAAvB,EACA;AACI1B,QAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAACmC,CAAD,CAAf;AACAjC,QAAAA,UAAU,CAACmC,IAAX,CAAgBrC,GAAG,CAACmC,CAAD,CAAnB;AACH,OAJD,MAMA;AACIhC,QAAAA,WAAW,CAACkC,IAAZ,CAAiBrC,GAAG,CAACmC,CAAD,CAApB;AACH;AACJ;;AACDzB,IAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACA,UAAMoC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,SAAI,IAAIJ,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACrC,KAAK,CAACiC,MAApB,EAA2BI,CAAC,EAA5B,EACA;AACIG,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB1C,KAAK,CAACqC,CAAD,CAA9B;AACH;;AACD,UAAMM,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAiB;AADZ;AADE,KAAf;AAKA,UAAMxD,KAAK,CAACQ,IAAN,CAAW,oCAAX,EAAiD4C,QAAjD,EAA2DG,MAA3D,EACLrB,IADK,CACAC,GAAG,IAAI;AACTX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,IAAhB;;AACA,WAAI,IAAIa,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACd,GAAG,CAACC,IAAJ,CAASS,MAAvB,EAA8BI,CAAC,EAA/B,EACA;AACIjC,QAAAA,UAAU,CAACmC,IAAX,CAAgB;AACZM,UAAAA,QAAQ,EAAEtB,GAAG,CAACC,IAAJ,CAASa,CAAT,EAAYQ,QADV;AAEZC,UAAAA,GAAG,EAAEvB,GAAG,CAACC,IAAJ,CAASa,CAAT,EAAYU;AAFL,SAAhB;AAIAnC,QAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACH;;AACD,YAAM4C,OAAO,GAAG;AACZC,QAAAA,SAAS,EAAEnD,IADC;AAEZQ,QAAAA,OAAO,EAAEA,OAAO,CAAC4C,OAAR,CAAgBC,KAFb;AAGZ3C,QAAAA,MAAM,EAAEA,MAAM,CAAC0C,OAAP,CAAeC,KAHX;AAIZ1C,QAAAA,IAAI,EAAEA,IAAI,CAACyC,OAAL,CAAaC,KAJP;AAKZzC,QAAAA,WAAW,EAAEA,WAAW,CAACwC,OAAZ,CAAoBC,KALrB;AAMZ1B,QAAAA,MAAM,EAAErB,UANI,CAOZ;;AAPY,OAAhB;AASAQ,MAAAA,OAAO,CAACC,GAAR,CAAYmC,OAAZ;AAEA5D,MAAAA,KAAK,CAACQ,IAAN,CAAW,6CAAX,EAA0DS,WAA1D,EACCiB,IADD,CACMC,GAAG,IAAI,CAEZ,CAHD,EAICG,KAJD,CAIOC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAJd;AAKAvC,MAAAA,KAAK,CAACQ,IAAN,CAAY,mCAAkCD,EAAG,EAAjD,EAAoDqD,OAApD,EACC1B,IADD,CACMC,GAAG,IAAI;AACLX,QAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,IAAhB;AACAN,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAwB,YAAWtB,IAAK,EAAxC;AACH,OAJL,EAKC4B,KALD,CAKOC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CALd;AAMH,KAjCK,EAkCLD,KAlCK,CAkCCC,GAAG,IAAIf,OAAO,CAACC,GAAR,CAAYc,GAAZ,CAlCR,CAAN;AAmCH,GAlED;;AAoEF,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAE/B,IAAI,CAACU,OAAtC;AAA+C,MAAA,GAAG,EAAEA;AAApD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAEkE;AAAA;AAAA;AAAA;AAAA,YAFlE,eAEwE;AAAA;AAAA;AAAA;AAAA,YAFxE,eAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAEV,IAAI,CAACY,MAAtC;AAA8C,MAAA,GAAG,EAAEA;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAGgE;AAAA;AAAA;AAAA;AAAA,YAHhE,eAGsE;AAAA;AAAA;AAAA;AAAA,YAHtE,eAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAEZ,IAAI,CAACa,IAAtC;AAA4C,MAAA,GAAG,EAAEA;AAAjD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAI4D;AAAA;AAAA;AAAA;AAAA,YAJ5D,eAIkE;AAAA;AAAA;AAAA;AAAA,YAJlE,eAKI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAEb,IAAI,CAACc,WAAtC;AAAmD,MAAA,GAAG,EAAEA;AAAxD;AAAA;AAAA;AAAA;AAAA,YALJ,eAK0E;AAAA;AAAA;AAAA;AAAA,YAL1E,eAKgF;AAAA;AAAA;AAAA;AAAA,YALhF,eAMI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,EAAE,EAAC,EAAnC;AAAsC,MAAA,QAAQ,EAAEkB,YAAhD;AAA8D,MAAA,QAAQ;AAAtE;AAAA;AAAA;AAAA;AAAA,YANJ,eAM4E;AAAA;AAAA;AAAA;AAAA,YAN5E,eAMkF;AAAA;AAAA;AAAA;AAAA,YANlF,EAOS1B,GAAG,CAACkD,GAAJ,CAASf,CAAD,iBACL;AAAA,8BACA;AAAK,QAAA,GAAG,EAAEA,CAAC,CAACS,GAAZ;AAAiB,QAAA,GAAG,EAAC,EAArB;AAAwB,QAAA,KAAK,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,cADA,eACqC;AAAA;AAAA;AAAA;AAAA,cADrC,eAEA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,WAA5B;AAAwC,QAAA,EAAE,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAO,QAAA,OAAO,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,CAPT,eAcE;AAAQ,MAAA,OAAO,EAAEf,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAjID;;GAAMrC,Q;UAEWD,S;;;KAFXC,Q;AAmIN,eAAeA,QAAf","sourcesContent":["import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst EditPost = () => {\r\n\r\n    const {id} = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const [user, setUser] = useState();\r\n    const [files, setFiles] = useState([]);\r\n    const [img, setImg] = useState([]);\r\n    const updatedImg = useState([]);\r\n    const doDeleteImg = useState([]);\r\n    \r\n    const address = React.createRef();\r\n    const mobile = React.createRef();\r\n    const rent = React.createRef();\r\n    const description = React.createRef();\r\n\r\n    useEffect(() => {\r\n        const fetchPost= async() => {\r\n        console.log(\"Post id: \", id);\r\n        const token = localStorage.getItem(\"secretToken\");\r\n        console.log(token);\r\n        if(token)\r\n        {\r\n            const user = jwtDecode(token);\r\n            console.log(\"user id: \", user.currentUser);\r\n            setUser(user.currentUser);\r\n        }\r\n        else{\r\n            window.location.href = '/home';\r\n        }\r\n        await axios.get(`http://localhost:8000/specific-post/${id}`)\r\n        .then(res => {\r\n            setPost(res.data);\r\n            setImg(res.data.imgUrl);\r\n        }\r\n        )\r\n        .catch(err => console.log(err));\r\n    }\r\n    fetchPost()\r\n},[])\r\n    const onFileUpload = (e) => {\r\n        setFiles(e.target.files);\r\n    }\r\n\r\n    const editPost = async(e) => {\r\n        e.preventDefault();\r\n        console.log(\"Clicked\");\r\n        updatedImg.length = 0;\r\n        doDeleteImg.length = 0;\r\n        const imgs = document.getElementsByName(\"deleteImg\");\r\n        for(let i=0;i<img.length;i++)\r\n        {\r\n            console.log(imgs[i].checked);\r\n            if(imgs[i].checked !== true)\r\n            {\r\n                console.log(img[i]);\r\n                updatedImg.push(img[i]);\r\n            }\r\n            else\r\n            {\r\n                doDeleteImg.push(img[i]);\r\n            }\r\n        }\r\n        console.log(doDeleteImg);\r\n        console.log(updatedImg);\r\n        const formData = new FormData();\r\n        for(let i=0;i<files.length;i++)\r\n        {\r\n            formData.append(\"image\", files[i]);\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'content-type' : 'multipart/form-data'\r\n            }\r\n        }\r\n        await axios.post(\"http://localhost:8000/generate-url\", formData, config)\r\n        .then(res => {\r\n            console.log(res.data);\r\n            for(let i=0;i<res.data.length;i++)\r\n            {\r\n                updatedImg.push({\r\n                    filename: res.data[i].filename,\r\n                    url: res.data[i].path\r\n                });\r\n                console.log(updatedImg);\r\n            }\r\n            const newPost = {\r\n                author_id: user,\r\n                address: address.current.value,\r\n                mobile: mobile.current.value,\r\n                rent: rent.current.value,\r\n                description: description.current.value,\r\n                imgUrl: updatedImg,\r\n                // date: new Date()\r\n            }\r\n            console.log(newPost);\r\n            \r\n            axios.post('http://localhost:8000/delete-img-cloudinary', doDeleteImg)\r\n            .then(res => {\r\n\r\n            })\r\n            .catch(err => console.log(err));\r\n            axios.post(`http://localhost:8000/edit-post/${id}`, newPost)\r\n            .then(res => {\r\n                    console.log(res.data);\r\n                    window.location.href = `/account/${user}`;\r\n                })\r\n            .catch(err => console.log(err));\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Post</h1>\r\n        <input type=\"text\" defaultValue={post.address} ref={address}/><br /><br />\r\n        <input type=\"text\" defaultValue={post.mobile} ref={mobile}/><br /><br />\r\n        <input type=\"text\" defaultValue={post.rent} ref={rent}/><br /><br />\r\n        <input type=\"text\" defaultValue={post.description} ref={description}/><br /><br />\r\n        <input type=\"file\" name=\"image\" id=\"\" onChange={onFileUpload} multiple/><br /><br />\r\n            {img.map((i) => (\r\n                <div>\r\n                <img src={i.url} alt=\"\" width={300}/><br/>\r\n                <input type=\"checkbox\" name=\"deleteImg\" id=\"\"/>\r\n                <label htmlFor=\"\">Delete</label>\r\n                </div>\r\n            ))}\r\n      <button onClick={editPost}>Edit Post</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPost\r\n"]},"metadata":{},"sourceType":"module"}