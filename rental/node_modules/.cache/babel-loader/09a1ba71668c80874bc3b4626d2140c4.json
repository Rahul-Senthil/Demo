{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\rental-app\\\\rental\\\\src\\\\components\\\\NewPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport validate from 'react-joi-validation';\nimport Joi from 'react-joi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPost = () => {\n  _s();\n\n  const address = /*#__PURE__*/React.createRef();\n  const mobile = /*#__PURE__*/React.createRef();\n  const rent = /*#__PURE__*/React.createRef();\n  const description = /*#__PURE__*/React.createRef();\n  const [user, setUser] = useState();\n  const [files, setFiles] = useState([]);\n  const [imageLink, setImageLink] = useState([]);\n  const [customError, setCustomError] = useState();\n  const postSchema = Joi.object().keys({\n    files: Joi.string().required(),\n    address: Joi.string().required(),\n    mobile: Joi.string().required(),\n    rent: Joi.string().required(),\n    description: Joi.string().required()\n  });\n  useEffect(() => {\n    const fetchToken = () => {\n      const token = sessionStorage.getItem(\"secretToken\");\n      console.log(token);\n\n      if (token) {\n        const user = jwtDecode(token);\n        console.log(user.currentUser);\n        setUser(user.currentUser);\n      } else {\n        window.location.href = '/home';\n      }\n    };\n\n    fetchToken();\n  }, []);\n\n  const onFileUpload = e => {\n    setFiles(e.target.files);\n  };\n\n  const addPost = async e => {\n    e.preventDefault();\n    console.log(\"Clicked\");\n    const newPostDemo = {\n      address: address.current.value,\n      mobile: mobile.current.value,\n      rent: rent.current.value,\n      description: description.current.value\n    };\n    const validationOptions = {\n      joiSchema: postSchema,\n      only: 'user'\n    };\n    const result = validate(newPostDemo, validationOptions);\n    console.log(result);\n\n    if (files.length > 0) {\n      const formData = new FormData();\n\n      for (let i = 0; i < files.length; i++) {\n        formData.append(\"image\", files[i]);\n      }\n\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }; // TODO: generate url after the validation\n\n      await axios.post(\"http://localhost:8000/generate-url\", formData, config).then(res => {\n        console.log(res.data);\n        imageLink.length = 0;\n\n        for (let i = 0; i < res.data.length; i++) {\n          imageLink.push({\n            filename: res.data[i].filename,\n            url: res.data[i].path\n          });\n        }\n\n        const newPost = {\n          author_id: user,\n          address: address.current.value,\n          mobile: mobile.current.value,\n          rent: rent.current.value,\n          description: description.current.value,\n          imgUrl: imageLink,\n          date: new Date()\n        };\n        console.log(newPost);\n        axios.post(\"http://localhost:8000/new-post\", newPost).then(res => {\n          if (typeof res.data == 'object') {\n            console.log(res.data);\n            setCustomError(res.data.error);\n          } else {\n            window.location.href = `/account/${user}`;\n          }\n        }).catch(err => console.log(err));\n      }).catch(err => console.log(err));\n    } else {\n      console.log('Atleast 1 Image is needed');\n    }\n  };\n\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      id: \"\",\n      onChange: onFileUpload,\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 91\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Address\",\n      ref: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 75\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      placeholder: \"Mobile Number\",\n      ref: mobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 88\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 94\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"$Rent\",\n      ref: rent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 64\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 70\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Description\",\n      ref: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 77\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 83\n    }, this), customError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: customError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPost,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Please login first..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPost, \"noa9EHXWNPapqadiM4R6vD7QuuQ=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["D:/React Projects/rental-app/rental/src/components/NewPost.jsx"],"names":["React","useEffect","axios","useState","jwtDecode","validate","Joi","NewPost","address","createRef","mobile","rent","description","user","setUser","files","setFiles","imageLink","setImageLink","customError","setCustomError","postSchema","object","keys","string","required","fetchToken","token","sessionStorage","getItem","console","log","currentUser","window","location","href","onFileUpload","e","target","addPost","preventDefault","newPostDemo","current","value","validationOptions","joiSchema","only","result","length","formData","FormData","i","append","config","headers","post","then","res","data","push","filename","url","path","newPost","author_id","imgUrl","date","Date","error","catch","err","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport validate from 'react-joi-validation';\r\nimport Joi from 'react-joi';\r\n\r\nconst NewPost = () => {\r\n    const address = React.createRef();\r\n    const mobile = React.createRef();\r\n    const rent = React.createRef();\r\n    const description = React.createRef();\r\n\r\n    const[user, setUser] = useState();\r\n    const [files, setFiles] = useState([]);\r\n    const [imageLink, setImageLink] = useState([]);\r\n    const [customError, setCustomError] = useState();\r\n\r\n    const postSchema = Joi.object().keys({\r\n        files: Joi.string().required(),\r\n        address: Joi.string().required(),\r\n        mobile: Joi.string().required(),\r\n        rent: Joi.string().required(),\r\n        description: Joi.string().required()\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchToken = () => {\r\n            const token = sessionStorage.getItem(\"secretToken\");\r\n            console.log(token);\r\n            if(token)\r\n            {\r\n                const user = jwtDecode(token);\r\n                console.log(user.currentUser);\r\n                setUser(user.currentUser);\r\n            }\r\n            else{\r\n                window.location.href = '/home';\r\n            }\r\n        }\r\n        fetchToken();\r\n    },[])\r\n\r\n    const onFileUpload = (e) => {\r\n        setFiles(e.target.files);\r\n    }\r\n    \r\n    const addPost = async(e) => {\r\n        e.preventDefault();\r\n        console.log(\"Clicked\");\r\n        const newPostDemo = {\r\n            address: address.current.value,\r\n            mobile: mobile.current.value,\r\n            rent: rent.current.value,\r\n            description: description.current.value,\r\n        }\r\n        const validationOptions = {\r\n            joiSchema: postSchema,\r\n            only: 'user'\r\n        };\r\n           \r\n        const result = validate(newPostDemo, validationOptions);\r\n        console.log(result);\r\n        if(files.length > 0){\r\n            const formData = new FormData();\r\n            for(let i=0;i<files.length;i++)\r\n            {\r\n                formData.append(\"image\", files[i]);\r\n            }\r\n            const config = {\r\n                headers: {\r\n                    'content-type' : 'multipart/form-data'\r\n                }\r\n            }\r\n            // TODO: generate url after the validation\r\n            await axios.post(\"http://localhost:8000/generate-url\", formData, config)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                imageLink.length = 0;\r\n                for(let i=0;i<res.data.length;i++)\r\n                {\r\n                    imageLink.push({\r\n                        filename: res.data[i].filename,\r\n                        url: res.data[i].path\r\n                    });\r\n                }\r\n                const newPost = {\r\n                    author_id: user,\r\n                    address: address.current.value,\r\n                    mobile: mobile.current.value,\r\n                    rent: rent.current.value,\r\n                    description: description.current.value,\r\n                    imgUrl: imageLink,\r\n                    date: new Date()\r\n                }\r\n                console.log(newPost);\r\n            \r\n                axios.post(\"http://localhost:8000/new-post\", newPost)\r\n                .then(res => {\r\n                        if(typeof(res.data) == 'object')\r\n                        {\r\n                            console.log(res.data);\r\n                            setCustomError(res.data.error);\r\n                        }\r\n                        else{\r\n                            window.location.href = `/account/${user}`;\r\n                        }\r\n                    })\r\n                .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        else{\r\n            console.log('Atleast 1 Image is needed');\r\n        }\r\n    }\r\n    \r\n    return ( \r\n    \r\n        (user? \r\n        <div>\r\n            <h1>Add Post</h1>\r\n            <input type=\"file\" name=\"image\" id=\"\" onChange={onFileUpload} multiple/><br /><br />\r\n            <input type=\"text\" placeholder='Address' ref={address}/><br /><br />\r\n            <input type=\"text\" name=\"\" id=\"\" placeholder='Mobile Number' ref={mobile}/><br /><br />\r\n            <input type=\"text\" placeholder='$Rent' ref={rent}/><br /><br />\r\n            <input type=\"text\" placeholder='Description' ref={description}/><br /><br />\r\n            {customError?\r\n            <p style={{color: \"red\"}}>{customError}</p>:''}\r\n            <button onClick={addPost}>Add Post</button>\r\n            {/* {imageLink.map(img => (\r\n                <img src={img.url} alt=\"\" />\r\n            ))} */}\r\n        </div> :\r\n        <h1>Please login first..</h1>\r\n        ) \r\n     );\r\n}\r\n \r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}