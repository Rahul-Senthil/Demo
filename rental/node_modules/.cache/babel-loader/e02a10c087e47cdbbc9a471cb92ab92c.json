{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\rental-app\\\\rental\\\\src\\\\components\\\\NewPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPost = () => {\n  _s();\n\n  const address = /*#__PURE__*/React.createRef();\n  const mobile = /*#__PURE__*/React.createRef();\n  const rent = /*#__PURE__*/React.createRef();\n  const description = /*#__PURE__*/React.createRef();\n  const [user, setUser] = useState();\n  const [files, setFiles] = useState([]);\n  const [imageLink, setImageLink] = useState([]);\n  const [customError, setCustomError] = useState();\n  useEffect(() => {\n    const fetchToken = () => {\n      const token = sessionStorage.getItem(\"secretToken\");\n      console.log(token);\n\n      if (token) {\n        const user = jwtDecode(token);\n        console.log(user.currentUser);\n        setUser(user.currentUser);\n      } else {\n        window.location.href = '/home';\n      }\n    };\n\n    fetchToken();\n  }, []);\n\n  const onFileUpload = e => {\n    setFiles(e.target.files);\n  }; // const validation = () => {\n  // }\n\n\n  const addPost = async e => {\n    e.preventDefault();\n    console.log(\"Clicked\"); // validation();\n\n    if (files.length > 0) {\n      const formData = new FormData();\n\n      for (let i = 0; i < files.length; i++) {\n        formData.append(\"image\", files[i]);\n      }\n\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      }; // TODO: generate url after the validation\n\n      await axios.post(\"http://localhost:8000/generate-url\", formData, config).then(res => {\n        console.log(res.data);\n        imageLink.length = 0;\n\n        for (let i = 0; i < res.data.length; i++) {\n          imageLink.push({\n            filename: res.data[i].filename,\n            url: res.data[i].path\n          });\n        }\n\n        const newPost = {\n          author_id: user,\n          address: address.current.value,\n          mobile: mobile.current.value,\n          rent: rent.current.value,\n          description: description.current.value,\n          imgUrl: imageLink,\n          date: new Date()\n        };\n        console.log(newPost);\n        axios.post(\"http://localhost:8000/new-post\", newPost).then(res => {\n          if (typeof res.data == 'object') {\n            console.log(res.data);\n            setCustomError(res.data.error);\n          } else {\n            window.location.href = `/account/${user}`;\n          }\n        }).catch(err => console.log(err));\n      }).catch(err => console.log(err));\n    } else {\n      console.log('Atleast 1 Image is needed');\n    }\n  };\n\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      onSubmit: addPost,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        id: \"\",\n        onChange: onFileUpload,\n        multiple: true,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 94\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 100\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Address\",\n        ref: address,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        placeholder: \"Mobile Number\",\n        ref: mobile,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 97\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"$Rent\",\n        ref: rent,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        ref: description,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 86\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 92\n      }, this), customError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: customError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Please login first..\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPost, \"noa9EHXWNPapqadiM4R6vD7QuuQ=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["D:/React Projects/rental-app/rental/src/components/NewPost.jsx"],"names":["React","useEffect","axios","useState","jwtDecode","NewPost","address","createRef","mobile","rent","description","user","setUser","files","setFiles","imageLink","setImageLink","customError","setCustomError","fetchToken","token","sessionStorage","getItem","console","log","currentUser","window","location","href","onFileUpload","e","target","addPost","preventDefault","length","formData","FormData","i","append","config","headers","post","then","res","data","push","filename","url","path","newPost","author_id","current","value","imgUrl","date","Date","error","catch","err","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst NewPost = () => {\r\n    const address = React.createRef();\r\n    const mobile = React.createRef();\r\n    const rent = React.createRef();\r\n    const description = React.createRef();\r\n\r\n    const[user, setUser] = useState();\r\n    const [files, setFiles] = useState([]);\r\n    const [imageLink, setImageLink] = useState([]);\r\n    const [customError, setCustomError] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchToken = () => {\r\n            const token = sessionStorage.getItem(\"secretToken\");\r\n            console.log(token);\r\n            if(token)\r\n            {\r\n                const user = jwtDecode(token);\r\n                console.log(user.currentUser);\r\n                setUser(user.currentUser);\r\n            }\r\n            else{\r\n                window.location.href = '/home';\r\n            }\r\n        }\r\n        fetchToken();\r\n    },[])\r\n\r\n    const onFileUpload = (e) => {\r\n        setFiles(e.target.files);\r\n    }\r\n\r\n    // const validation = () => {\r\n        \r\n    // }\r\n    \r\n    const addPost = async(e) => {\r\n        e.preventDefault();\r\n        console.log(\"Clicked\");\r\n        // validation();\r\n        if(files.length > 0){\r\n            const formData = new FormData();\r\n            for(let i=0;i<files.length;i++)\r\n            {\r\n                formData.append(\"image\", files[i]);\r\n            }\r\n            const config = {\r\n                headers: {\r\n                    'content-type' : 'multipart/form-data'\r\n                }\r\n            }\r\n            // TODO: generate url after the validation\r\n            await axios.post(\"http://localhost:8000/generate-url\", formData, config)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                imageLink.length = 0;\r\n                for(let i=0;i<res.data.length;i++)\r\n                {\r\n                    imageLink.push({\r\n                        filename: res.data[i].filename,\r\n                        url: res.data[i].path\r\n                    });\r\n                }\r\n                const newPost = {\r\n                    author_id: user,\r\n                    address: address.current.value,\r\n                    mobile: mobile.current.value,\r\n                    rent: rent.current.value,\r\n                    description: description.current.value,\r\n                    imgUrl: imageLink,\r\n                    date: new Date()\r\n                }\r\n                console.log(newPost);\r\n            \r\n                axios.post(\"http://localhost:8000/new-post\", newPost)\r\n                .then(res => {\r\n                        if(typeof(res.data) == 'object')\r\n                        {\r\n                            console.log(res.data);\r\n                            setCustomError(res.data.error);\r\n                        }\r\n                        else{\r\n                            window.location.href = `/account/${user}`;\r\n                        }\r\n                    })\r\n                .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        else{\r\n            console.log('Atleast 1 Image is needed');\r\n        }\r\n    }\r\n    \r\n    return ( \r\n    \r\n        (user? \r\n        <div>\r\n            <h1>Add Post</h1>\r\n            <form action=\"\" onSubmit={addPost}>\r\n            <input type=\"file\" name=\"image\" id=\"\" onChange={onFileUpload} multiple required/><br /><br />\r\n            <input type=\"text\" placeholder='Address' ref={address} required/><br /><br />\r\n            <input type=\"text\" name=\"\" id=\"\" placeholder='Mobile Number' ref={mobile} required/><br /><br />\r\n            <input type=\"text\" placeholder='$Rent' ref={rent} required/><br /><br />\r\n            <input type=\"text\" placeholder='Description' ref={description} required/><br /><br />\r\n            {customError?\r\n            <p style={{color: \"red\"}}>{customError}</p>:''}\r\n            <input type=\"submit\" value=\"Add Post\" />\r\n            {/* {imageLink.map(img => (\r\n                <img src={img.url} alt=\"\" />\r\n            ))} */}\r\n            </form>\r\n        </div> :\r\n        <h1>Please login first..</h1>\r\n        ) \r\n     );\r\n}\r\n \r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}