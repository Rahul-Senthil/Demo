{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\rental-app\\\\rental\\\\src\\\\components\\\\EditPost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  const [user, setUser] = useState();\n  const [files, setFiles] = useState([]);\n  const [img, setImg] = useState([]);\n  const [imageLink, setImageLink] = useState([]);\n  const [updatedImg, setUpdatedImg] = useState([]); // const [isChecked, setChecked] = useState([]);\n\n  const address = /*#__PURE__*/React.createRef();\n  const mobile = /*#__PURE__*/React.createRef();\n  const rent = /*#__PURE__*/React.createRef();\n  const description = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    const fetchPost = async () => {\n      console.log(\"Post id: \", id);\n      const token = localStorage.getItem(\"secretToken\");\n      console.log(token);\n\n      if (token) {\n        const user = jwtDecode(token);\n        console.log(\"user id: \", user.currentUser);\n        setUser(user.currentUser);\n      }\n\n      await axios.get(`http://localhost:8000/specific-post/${id}`).then(res => {\n        setPost(res.data);\n        setImg(res.data.imgUrl);\n        console.log(res.data);\n        setImageLink([...res.data.imgUrl]);\n      }).catch(err => console.log(err));\n    };\n\n    fetchPost();\n  }, []);\n\n  const onFileUpload = e => {\n    setFiles(e.target.files);\n  };\n\n  const editPost = async e => {\n    e.preventDefault();\n    console.log(\"Clicked\");\n    updatedImg.length = 0;\n    const imgs = document.getElementsByName(\"deleteImg\");\n\n    for (let i = 0; i < img.length; i++) {\n      console.log(imgs[i].checked);\n\n      if (imgs[i].checked !== true) {\n        console.log(imgs[i].value); // console.log(i);\n        // img.splice(i,1);\n\n        updatedImg.push(imgs[i].value);\n      }\n    }\n\n    console.log(updatedImg);\n    const formData = new FormData();\n\n    for (let i = 0; i < files.length; i++) {\n      formData.append(\"image\", files[i]);\n    }\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }; // await axios.post(\"http://localhost:8000/generate-url\", formData, config)\n    // .then(res => {\n    //     console.log(res.data);\n    //     for(let i=0;i<res.data.length;i++)\n    //     {\n    //         imageLink.push(res.data[i].path);\n    //         console.log(res.data[i].path);\n    //     }\n    //     const newPost = {\n    //         author_id: user,\n    //         address: address.current.value,\n    //         mobile: mobile.current.value,\n    //         rent: rent.current.value,\n    //         description: description.current.value,\n    //         imgUrl: imageLink,\n    //         // date: new Date()\n    //     }\n    //     console.log(newPost);\n    //     axios.post(`http://localhost:8000/edit-post/${id}`, newPost)\n    //     .then(res => {\n    //             console.log(res.data);\n    //             window.location.href = `/account/${user}`;\n    //         })\n    //     .catch(err => console.log(err));\n    // })\n    // .catch(err => console.log(err));\n  };\n\n  const onDeleteImg = e => {// const imgs = document.getElementsByName(\"deleteImg\");\n    // console.log(imgs[0].checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: post.address,\n      ref: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: post.mobile,\n      placeholder: \"Mobile Number\",\n      ref: mobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 94\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 100\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: post.rent,\n      ref: rent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 68\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: post.description,\n      ref: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 76\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      id: \"\",\n      onChange: onFileUpload,\n      multiple: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 91\n    }, this), img.map((i, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: i,\n        alt: \"\",\n        width: 300\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"deleteImg\",\n        id: \"\",\n        value: i,\n        onChange: onDeleteImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: editPost,\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPost, \"wPd0LkXPicvWQ6qfoBKNrlAWAWc=\", false, function () {\n  return [useParams];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["D:/React Projects/rental-app/rental/src/components/EditPost.jsx"],"names":["axios","jwtDecode","React","useEffect","useState","useParams","EditPost","id","post","setPost","user","setUser","files","setFiles","img","setImg","imageLink","setImageLink","updatedImg","setUpdatedImg","address","createRef","mobile","rent","description","fetchPost","console","log","token","localStorage","getItem","currentUser","get","then","res","data","imgUrl","catch","err","onFileUpload","e","target","editPost","preventDefault","length","imgs","document","getElementsByName","i","checked","value","push","formData","FormData","append","config","headers","onDeleteImg","map","index"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst EditPost = () => {\r\n\r\n    const {id} = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const [user, setUser] = useState();\r\n    const [files, setFiles] = useState([]);\r\n    const [img, setImg] = useState([]);\r\n    const [imageLink, setImageLink] = useState([]);\r\n    const [updatedImg, setUpdatedImg] = useState([]);\r\n    // const [isChecked, setChecked] = useState([]);\r\n    \r\n    const address = React.createRef();\r\n    const mobile = React.createRef();\r\n    const rent = React.createRef();\r\n    const description = React.createRef();\r\n\r\n    useEffect(() => {\r\n        const fetchPost= async() => {\r\n        console.log(\"Post id: \", id);\r\n        const token = localStorage.getItem(\"secretToken\");\r\n        console.log(token);\r\n        if(token)\r\n        {\r\n            const user = jwtDecode(token);\r\n            console.log(\"user id: \", user.currentUser);\r\n            setUser(user.currentUser);\r\n        }\r\n        await axios.get(`http://localhost:8000/specific-post/${id}`)\r\n        .then(res => {\r\n            setPost(res.data);\r\n            setImg(res.data.imgUrl);\r\n            console.log(res.data);\r\n            setImageLink([...res.data.imgUrl]);\r\n        }\r\n        )\r\n        .catch(err => console.log(err));\r\n    }\r\n    fetchPost()\r\n},[])\r\n    const onFileUpload = (e) => {\r\n        setFiles(e.target.files);\r\n    }\r\n\r\n    const editPost = async(e) => {\r\n        e.preventDefault();\r\n        console.log(\"Clicked\");\r\n        updatedImg.length = 0;\r\n        const imgs = document.getElementsByName(\"deleteImg\");\r\n        for(let i=0;i<img.length;i++)\r\n        {\r\n            console.log(imgs[i].checked);\r\n            if(imgs[i].checked !== true)\r\n            {\r\n                console.log(imgs[i].value);\r\n                // console.log(i);\r\n                // img.splice(i,1);\r\n                updatedImg.push(imgs[i].value);\r\n            }\r\n        }\r\n        console.log(updatedImg);\r\n        const formData = new FormData();\r\n        for(let i=0;i<files.length;i++)\r\n        {\r\n            formData.append(\"image\", files[i]);\r\n        }\r\n        const config = {\r\n            headers: {\r\n                'content-type' : 'multipart/form-data'\r\n            }\r\n        }\r\n        // await axios.post(\"http://localhost:8000/generate-url\", formData, config)\r\n        // .then(res => {\r\n        //     console.log(res.data);\r\n        //     for(let i=0;i<res.data.length;i++)\r\n        //     {\r\n        //         imageLink.push(res.data[i].path);\r\n        //         console.log(res.data[i].path);\r\n        //     }\r\n        //     const newPost = {\r\n        //         author_id: user,\r\n        //         address: address.current.value,\r\n        //         mobile: mobile.current.value,\r\n        //         rent: rent.current.value,\r\n        //         description: description.current.value,\r\n        //         imgUrl: imageLink,\r\n        //         // date: new Date()\r\n        //     }\r\n        //     console.log(newPost);\r\n            \r\n        //     axios.post(`http://localhost:8000/edit-post/${id}`, newPost)\r\n        //     .then(res => {\r\n        //             console.log(res.data);\r\n        //             window.location.href = `/account/${user}`;\r\n        //         })\r\n        //     .catch(err => console.log(err));\r\n        // })\r\n        // .catch(err => console.log(err));\r\n    }\r\n\r\n    const onDeleteImg = (e) => {\r\n        // const imgs = document.getElementsByName(\"deleteImg\");\r\n        // console.log(imgs[0].checked);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit Post</h1>\r\n      <input type=\"text\" value={post.address} ref={address}/><br /><br />\r\n            <input type=\"text\" value={post.mobile} placeholder='Mobile Number' ref={mobile}/><br /><br />\r\n            <input type=\"text\" value={post.rent} ref={rent}/><br /><br />\r\n            <input type=\"text\" value={post.description} ref={description}/><br /><br />\r\n            <input type=\"file\" name=\"image\" id=\"\" onChange={onFileUpload} multiple/><br /><br />\r\n            {img.map((i, index) => (\r\n                <div>\r\n                <img src={i} alt=\"\" width={300}/><br/>\r\n                <input type=\"checkbox\" name=\"deleteImg\" id=\"\" value={i} onChange={onDeleteImg}/>\r\n                </div>\r\n            ))}\r\n      <button onClick={editPost}>Edit Post</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPost\r\n"]},"metadata":{},"sourceType":"module"}