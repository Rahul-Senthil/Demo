{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\rental-app\\\\rental\\\\src\\\\components\\\\AllPost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport '../css/AllPost.css';\nimport { FaSearch } from 'react-icons/fa';\nimport { post } from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllPost = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('Address');\n  useEffect(() => {\n    const fetchPost = async () => {\n      await axios.get(\"http://localhost:8000/allpost\").then(res => {\n        setPosts(res.data);\n        console.log(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    fetchPost();\n  }, []);\n\n  const handleSearchBy = async e => {\n    setSortBy(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const searchKey = /*#__PURE__*/React.createRef();\n\n  const handleSearch = async () => {\n    console.log('he'); // const searchBy = {\n    //     searchKey: searchKey.current.value,\n    //     sortBy\n    // }\n\n    const key = searchKey.current.value; // console.log(searchBy);\n\n    await axios.get(`http://localhost:8000/search?searchKey=${key}&sortBy=${sortBy}`).then(res => setPosts(res.data)).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid allpost\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search col\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"filter\",\n          onChange: handleSearchBy,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Address\",\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Rent\",\n            children: \"Rent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Rooms\",\n            children: \"Bed Rooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-bar\",\n          type: \"text\",\n          placeholder: \"Search\",\n          ref: searchKey,\n          onKeyPress: event => event.key === 'Enter' ? handleSearch() : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          className: \"search-btn\",\n          onClick: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Rent a \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"black\"\n          },\n          children: \"House\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: \"width: 18rem;\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"...\",\n          className: \"card-img-top\",\n          alt: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Card title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            class: \"btn btn-primary\",\n            children: \"Go somewhere\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AllPost, \"FM7frX6evBSOpLz2+2P5qd1aLkI=\");\n\n_c = AllPost;\nexport default AllPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPost\");","map":{"version":3,"sources":["D:/React Projects/rental-app/rental/src/components/AllPost.jsx"],"names":["axios","React","useEffect","useState","FaSearch","post","AllPost","posts","setPosts","sortBy","setSortBy","fetchPost","get","then","res","data","console","log","catch","err","handleSearchBy","e","target","value","searchKey","createRef","handleSearch","key","current","event","color","map","p"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport '../css/AllPost.css';\r\nimport {FaSearch} from 'react-icons/fa';\r\nimport { post } from 'jquery';\r\n\r\nconst AllPost = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [sortBy, setSortBy] = useState('Address');\r\n    \r\n    useEffect(() =>{\r\n        const fetchPost = async() => {\r\n            await axios.get(\"http://localhost:8000/allpost\")\r\n            .then(res => {\r\n                setPosts(res.data);\r\n                console.log(res.data);\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        fetchPost();\r\n    },[])\r\n\r\n    const handleSearchBy = async(e) => {\r\n        setSortBy(e.target.value);\r\n        console.log(e.target.value);\r\n    }\r\n    const searchKey = React.createRef();\r\n    const handleSearch = async() =>{\r\n        console.log('he');\r\n        // const searchBy = {\r\n        //     searchKey: searchKey.current.value,\r\n        //     sortBy\r\n        // }\r\n        const key = searchKey.current.value;\r\n        // console.log(searchBy);\r\n        await axios.get(`http://localhost:8000/search?searchKey=${key}&sortBy=${sortBy}`)\r\n        .then(res => setPosts(res.data))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className='container-fluid allpost'>\r\n            <div className='row'>\r\n                <div className='search col'>\r\n                <select className='filter' onChange={handleSearchBy}>\r\n                    <option value=\"Address\">Address</option>\r\n                    <option value=\"Rent\">Rent</option>\r\n                    <option value=\"Rooms\">Bed Rooms</option>\r\n                </select>\r\n                <input className='search-bar' type=\"text\" placeholder='Search' ref={searchKey} onKeyPress={event => event.key === 'Enter'? handleSearch() : ''}/>\r\n                {/* <button className='search-btn' onClick={handleSearch}>Search</button> */}\r\n                <FaSearch className='search-btn' onClick={handleSearch}/>\r\n                </div>\r\n            </div>\r\n            <div className='post-container'>\r\n                <h1>Rent a <span style={{color: \"black\"}}>House</span></h1>\r\n                {posts.map(p => (\r\n                    <div className=\"card\" style=\"width: 18rem;\">\r\n                    <img src=\"...\" className=\"card-img-top\" alt=\"...\"/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Card title</h5>\r\n                        <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n                    </div>\r\n                    </div>\r\n                ))}\r\n                {/* {posts.map(p => (\r\n                    <div onClick={() => {window.location.href = `/post/${p._id}`}}>\r\n                        {p.imgUrl.map(i => (\r\n                            <img src={i.url} alt=\"\" width={300}/>\r\n                        ))}\r\n                        <p>{p.address}</p>\r\n                        <p>{p.mobile}</p>\r\n                        <p>{p.rent}</p>\r\n                        </div>\r\n                ))} */}\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AllPost;"]},"metadata":{},"sourceType":"module"}