[{"D:\\React Projects\\rental-app\\rental\\src\\index.js":"1","D:\\React Projects\\rental-app\\rental\\src\\reportWebVitals.js":"2","D:\\React Projects\\rental-app\\rental\\src\\App.js":"3","D:\\React Projects\\rental-app\\rental\\src\\components\\NewPost.jsx":"4","D:\\React Projects\\rental-app\\rental\\src\\components\\Navbar.jsx":"5","D:\\React Projects\\rental-app\\rental\\src\\components\\Post.jsx":"6","D:\\React Projects\\rental-app\\rental\\src\\components\\Login.jsx":"7","D:\\React Projects\\rental-app\\rental\\src\\components\\Account.jsx":"8","D:\\React Projects\\rental-app\\rental\\src\\components\\EditPost.jsx":"9","D:\\React Projects\\rental-app\\rental\\src\\components\\CheckPin.jsx":"10","D:\\React Projects\\rental-app\\rental\\src\\middlewares\\postValidation.js":"11","D:\\React Projects\\rental-app\\rental\\src\\components\\AllPost.jsx":"12","D:\\React Projects\\rental-app\\rental\\src\\components\\Home.jsx":"13"},{"size":712,"mtime":1648268586471,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1060,"mtime":1648268943207,"results":"17","hashOfConfig":"15"},{"size":7546,"mtime":1648366325482,"results":"18","hashOfConfig":"15"},{"size":2705,"mtime":1653749941363,"results":"19","hashOfConfig":"15"},{"size":2378,"mtime":1648314770360,"results":"20","hashOfConfig":"15"},{"size":3852,"mtime":1653750559830,"results":"21","hashOfConfig":"15"},{"size":2524,"mtime":1648367572041,"results":"22","hashOfConfig":"15"},{"size":9560,"mtime":1648367131710,"results":"23","hashOfConfig":"15"},{"size":2040,"mtime":1648370488400,"results":"24","hashOfConfig":"15"},{"size":0,"mtime":1648229082252,"results":"25","hashOfConfig":"15"},{"size":3620,"mtime":1648314792320,"results":"26","hashOfConfig":"15"},{"size":1835,"mtime":1648276470288,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1bf1866",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\React Projects\\rental-app\\rental\\src\\index.js",[],[],["75","76"],"D:\\React Projects\\rental-app\\rental\\src\\reportWebVitals.js",[],[],"D:\\React Projects\\rental-app\\rental\\src\\App.js",[],[],"D:\\React Projects\\rental-app\\rental\\src\\components\\NewPost.jsx",["77","78","79"],[],"import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../css/NewPost.css';\r\nimport {FaFileUpload} from 'react-icons/fa'\r\n\r\nconst NewPost = () => {\r\n    const address = React.createRef();\r\n    const mobile = React.createRef();\r\n    const rent = React.createRef();\r\n    const description = React.createRef();\r\n\r\n    const[user, setUser] = useState();\r\n    const [files, setFiles] = useState([]);\r\n    const [imageLink, setImageLink] = useState([]);\r\n    const [customError, setCustomError] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchToken = () => {\r\n            const token = sessionStorage.getItem(\"secretToken\");\r\n            console.log(token);\r\n            if(token)\r\n            {\r\n                const user = jwtDecode(token);\r\n                console.log(user.currentUser);\r\n                setUser(user.currentUser);\r\n            }\r\n            else{\r\n                window.location.href = '/home';\r\n            }\r\n        }\r\n        fetchToken();\r\n    },[])\r\n\r\n    const onFileUpload = (e) => {\r\n        setFiles(e.target.files);\r\n        if(e.target.files.length>1)\r\n        {\r\n            document.getElementById(\"filename\").innerHTML = e.target.files.length + \" files selected\";\r\n        }\r\n        else{\r\n            document.getElementById(\"filename\").innerHTML = e.target.files.length + \" file selected\";\r\n        }\r\n    }\r\n\r\n    const validation = (addressValue, mobileValue, rentValue, descriptionValue) => {\r\n        const mobilePattern = '[6789][0-9]{9}';\r\n        const rentPattern = '^[1-9]+[0-9]*$';\r\n        let c=0;\r\n        for(let i=0;i<files.length;i++)\r\n        {\r\n            if(files[i].type.split(\"/\")[1] !== 'jpeg' && files[i].type.split(\"/\")[1] !== 'jpg' && files[i].type.split(\"/\")[1] !== 'png')\r\n            {\r\n                setCustomError(\"*Only Image can be uploaded\");\r\n                console.log(files[i].type.split(\"/\")[1]);\r\n                c++;\r\n                return false;\r\n            }\r\n        }\r\n        if(c==0){\r\n        if(!files.length)\r\n        {\r\n            setCustomError(\"*Image is required\");\r\n            return false;\r\n        }\r\n        else if(files.length>4)\r\n        {\r\n            setCustomError(\"*Only 4 Images can be uploaded\");\r\n            return false;\r\n        }\r\n        else if(!addressValue)\r\n        {\r\n            setCustomError(\"*Address is required\");\r\n            return false;\r\n        }\r\n        else if(addressValue.length<10)\r\n        {\r\n            setCustomError(\"*Address should be more than 10 characters\");\r\n            return false;\r\n        }\r\n        else if(!mobileValue)\r\n        {\r\n            setCustomError(\"*Mobile Number is required\");\r\n            return false;\r\n        }\r\n        else if(!mobileValue.match(mobilePattern) || mobile.current.value.length != 10)\r\n        {\r\n            setCustomError(\"*Enter a valid Mobile Number\");\r\n            return false;\r\n        }\r\n        else if(!rentValue)\r\n        {\r\n            setCustomError(\"*Rent is required\");\r\n            return false;\r\n        }\r\n        else if(!rentValue.match(rentPattern))\r\n        {\r\n            setCustomError(\"*Rent should not be negative\");\r\n            return false;\r\n        }\r\n        else if(!descriptionValue)\r\n        {\r\n            setCustomError(\"*Description is Required\");\r\n            return false;\r\n        }\r\n        else{\r\n            setCustomError(\" \")\r\n            return true;\r\n        }\r\n    }\r\n    }\r\n    \r\n    const addPost = async(e) => {\r\n        e.preventDefault();\r\n        const addressValue = address.current.value;\r\n        const mobileValue = mobile.current.value;\r\n        const rentValue = rent.current.value;\r\n        const descriptionValue = description.current.value;\r\n        console.log(\"Clicked\");\r\n        let isValidated = validation(addressValue, mobileValue, rentValue, descriptionValue);\r\n        console.log(isValidated);\r\n        if(isValidated)\r\n        {\r\n            document.getElementById(\"btn\").value = \"Saving...\";\r\n            const formData = new FormData();\r\n            for(let i=0;i<files.length;i++)\r\n            {\r\n                formData.append(\"image\", files[i]);\r\n            }\r\n            const config = {\r\n                headers: {\r\n                    'content-type' : 'multipart/form-data'\r\n                }\r\n            }\r\n            await axios.post(\"http://localhost:8000/generate-url\", formData, config)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                imageLink.length = 0;\r\n                for(let i=0;i<res.data.length;i++)\r\n                {\r\n                    imageLink.push({\r\n                        filename: res.data[i].filename,\r\n                        url: res.data[i].path\r\n                    });\r\n                }\r\n                \r\n                console.log(addressValue);\r\n                const newPost = {\r\n                    author_id: user,\r\n                    address: addressValue,\r\n                    mobile: mobileValue,\r\n                    rent: rentValue,\r\n                    description: descriptionValue,\r\n                    imgUrl: imageLink,\r\n                    date: new Date()\r\n                }\r\n                console.log(newPost);\r\n            \r\n                axios.post(\"http://localhost:8000/new-post\", newPost)\r\n                .then(res => {\r\n                        if(typeof(res.data) == 'object')\r\n                        {\r\n                            console.log(res.data);\r\n                            setCustomError(res.data.error);\r\n                        }\r\n                        else{\r\n                            window.location.href = `/account/${user}`;\r\n                        }\r\n                    })\r\n                .catch(err => console.log(err));\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n    }\r\n    \r\n    return ( \r\n            <div className='form-page'>\r\n            <h1>Add <span style={{color: \"black\"}}>Post</span></h1>\r\n            <div className='form-container'>\r\n            <div className='post-form'>\r\n            <form action=\"\" onSubmit={addPost}>\r\n            <label for=\"uploadfile\" className='upload-label'>Select Image from device <FaFileUpload/>   <span style={{color: \"red\"}} id=\"filename\">0 file selected</span></label>\r\n            <input type=\"file\" name=\"image\" accept='image/*' id=\"uploadfile\" onChange={onFileUpload} multiple />\r\n            <br /><br />\r\n            <input type=\"text\" placeholder='Address' ref={address} /><br /><br />\r\n            <input type=\"text\" name=\"\" id=\"\" placeholder='Mobile Number' ref={mobile} /><br /><br />\r\n            <input type=\"text\" placeholder='Rent' ref={rent} /><br /><br />\r\n            <select name=\"\" id=\"\" ref={description}>\r\n                <option value=\"1 Bedroom\">1 Bed Room</option>\r\n                <option value=\"2 Bedroom\">2 Bed Room</option>\r\n                <option value=\"3 Bedroom\">3 Bed Room</option>\r\n                <option value=\"4 Bedroom\">4 Bed Room</option>\r\n            </select><br /><br />\r\n            {customError? <p style={{color: \"red\"}}>{customError}</p>:''}\r\n            <input type=\"submit\" value=\"Add Post\" id=\"btn\" style={{backgroundColor: \"rgb(236, 89, 138)\", border: \"none\"}}/>\r\n            </form>\r\n            <br /><br />\r\n        </div>\r\n        </div>\r\n        <h6 style={{textAlign: \"center\"}}><a href={`/account/${user}`}>Back to Account Page</a></h6>\r\n        </div> \r\n        ) \r\n     \r\n}\r\n \r\nexport default NewPost;","D:\\React Projects\\rental-app\\rental\\src\\components\\Navbar.jsx",["80"],[],"import React, { useEffect, useState } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { NavLink } from 'react-bootstrap';\r\nimport '../css/Navbar.css';\r\nimport { FaHamburger } from 'react-icons/fa';\r\n \r\nconst Navbar = () => {\r\n\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchToken = () => {\r\n            const token = sessionStorage.getItem(\"secretToken\");\r\n            console.log(token);\r\n            if(token)\r\n            {\r\n                const user = jwtDecode(token);\r\n                setUser({user_id: user.currentUser, username: user.username});\r\n            }\r\n        }\r\n        fetchToken();\r\n    },[])\r\n\r\n    const handleLogout = () => {\r\n        sessionStorage.removeItem(\"secretToken\");\r\n    }\r\n    return ( \r\n        <div>\r\n        <nav class=\"navbar navbar-expand-lg\">\r\n        <div class=\"container-fluid\">\r\n            <a class=\"navbar-brand\" href=\"#\">Rently</a>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <FaHamburger className='hamburger'/>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n            <ul class=\"navbar-nav\">\r\n                <li class=\"nav-item\">\r\n                <NavLink class=\"nav-link\" aria-current=\"page\" href=\"/home\">Home</NavLink>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                <NavLink class=\"nav-link\" aria-current=\"page\" href=\"/posts\">Post</NavLink>\r\n                </li>\r\n                {user.username?\r\n                <li class=\"nav-item\">\r\n                <NavLink class=\"nav-link\" href={`/account/${user.user_id}`}>{user.username}</NavLink>\r\n                </li>:''}\r\n                {user.username?\r\n                <li class=\"nav-item\">\r\n                <NavLink class=\"nav-link\" href='/'><span onClick={handleLogout}>Logout</span></NavLink>\r\n                </li>:\r\n                <li class=\"nav-item\">\r\n                <NavLink class=\"nav-link\" href=\"/login\">Login</NavLink>\r\n                </li>}\r\n            </ul>\r\n            </div>\r\n        </div>\r\n        </nav>\r\n        {/* <div>\r\n            <ul>\r\n                <li><a href=\"/\">Home</a></li>\r\n                { user.username? \r\n                <div>\r\n                <li><a href={`/account/${user.user_id}`}>{user.username}</a></li> \r\n                <li><a href=\"/\"><span onClick={handleLogout}>Logout</span></a></li>\r\n                </div> :\r\n                <li><a href=\"/login\">Login</a></li> }\r\n            </ul>\r\n        </div> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","D:\\React Projects\\rental-app\\rental\\src\\components\\Post.jsx",["81"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport jwtDecode from 'jwt-decode';\r\nimport '../css/Post.css';\r\nimport {Carousel} from 'react-bootstrap';\r\nimport {FaHome, FaRupeeSign, FaPhoneAlt, FaBed} from 'react-icons/fa';\r\nconst Post = () => {\r\n  const { id } = useParams();\r\n  const [post, setPost] = useState([]);\r\n  const [user, setUser] = useState();\r\n  const [img, setImg] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPost= async() => {\r\n    console.log(\"Post id: \", id);\r\n    const token = sessionStorage.getItem(\"secretToken\");\r\n    console.log(token);\r\n    if(token)\r\n    {\r\n        const user = jwtDecode(token);\r\n        console.log(\"user id: \", user.currentUser);\r\n        setUser(user.currentUser);\r\n    }\r\n    await axios.get(`http://localhost:8000/specific-post/${id}`)\r\n    .then(res => {\r\n        setPost(res.data);\r\n        setImg(res.data.imgUrl)\r\n        console.log(res.data);\r\n    }\r\n    )\r\n    .catch(err => console.log(err));\r\n}\r\nfetchPost()\r\n},[])\r\n\r\nconst deletePost = async(id) => {\r\n  await axios.delete(`http://localhost:8000/delete-post/${id}`)\r\n  .then(res => window.location.href = `/account/${user}`)\r\n  .catch(err => console.log(err))\r\n}\r\n\r\n  return (\r\n    <div className=\"container-fluid post-details\">\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <Carousel>\r\n          {img.map(i => (\r\n                <Carousel.Item className='carousel-item'>\r\n                  <img src={i.url} alt=\"...\" className='carousel-img' />\r\n                </Carousel.Item>\r\n              ))}\r\n          </Carousel>\r\n        </div>\r\n        <div className='col-5 details'> \r\n            <h1>Details</h1>\r\n            <p><span>Location <FaHome/></span> : {post.address}</p>\r\n            <p><span>Contact Number <FaPhoneAlt/></span> : {post.mobile}</p>\r\n            <p><span>Rent <FaRupeeSign/></span> : {post.rent}</p>\r\n            <p><span>Bed Rooms <FaBed/></span> : {post.description}</p>\r\n            {post.author_id === user? \r\n              <div>\r\n                <button onClick={() => {window.location.href = `/account/${id}/edit-post`}}>Edit</button><br />\r\n                <button onClick={() => deletePost(post._id)}>Delete</button>\r\n              </div>: ''}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","D:\\React Projects\\rental-app\\rental\\src\\components\\Login.jsx",["82"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../css/Login.css';\r\n\r\nconst Login = () => {\r\n\r\n  const [customError, setCustomError] = useState();\r\n  const [loginCustomError, setLoginCustomError] = useState();\r\n  const history = useHistory();\r\n  const registerUsername = React.createRef();\r\n  const registerMail = React.createRef();\r\n  const registerPassword = React.createRef();\r\n\r\n  const loginMail = React.createRef();\r\n  const loginPassword = React.createRef();\r\n\r\n  const handleRegister = async() => {\r\n    const registerCredentials = {\r\n        email_id: registerMail.current.value.trim(),\r\n        username: registerUsername.current.value.trim(),\r\n        password: registerPassword.current.value\r\n    }\r\n\r\n    await axios.post(\"http://localhost:8000/auth/validateRegister\", registerCredentials)\r\n    .then(async(res) => {\r\n      if(typeof(res.data) == 'string'){\r\n        console.log(res.data);\r\n        setCustomError(res.data);\r\n      }\r\n      else{\r\n        console.log(res.data);\r\n        await axios.post(\"http://localhost:8000/auth/register\", registerCredentials)\r\n        .then(res => {\r\n              console.log(res.data);\r\n              const jwt = res.data.token;\r\n              sessionStorage.setItem(\"secretToken\", jwt);\r\n              window.location.href = '/home';\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n    // await axios.post(\"http://localhost:8000/auth/register\", registerCredentials)\r\n    // .then(res => {\r\n    //   console.log(res.data);\r\n    //   const jwt = res.data.token;\r\n    //   sessionStorage.setItem(\"secretToken\", jwt);\r\n    //   window.location.href = '/posts';\r\n    // })\r\n    // .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleLogin = async() => {\r\n    const loginCredentials = {\r\n        email_id: loginMail.current.value,\r\n        password: loginPassword.current.value\r\n    }\r\n    await axios.post(\"http://localhost:8000/auth/login\", loginCredentials)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      const jwt = res.data.token;\r\n      if(jwt !== undefined)\r\n      {\r\n        sessionStorage.setItem(\"secretToken\", jwt);\r\n        window.location.href = '/home';\r\n      }\r\n      else{\r\n        console.log(res.data);\r\n        setLoginCustomError(res.data);\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className='login-page'>\r\n      <div className=\"login\">\r\n      <h1 style={{color: \"black\"}}>Login</h1>\r\n      <div className='form-container'>\r\n      <div className='login-form'>\r\n      <div>\r\n      <input type=\"text\" placeholder='Email' ref={loginMail}/><br /><br />\r\n      <input type=\"password\" placeholder='Password' ref={loginPassword}/><br /><br />\r\n      {loginCustomError ? <p style={{color: \"red\"}}>{loginCustomError}</p>: ''}\r\n      <button style={{backgroundColor: \"rgb(236, 89, 138)\", border: \"none\", marginTop: \"30px\"}} onClick={handleLogin}>Login</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n\r\n      <div className=\"register\">\r\n      <h1 style={{color: \"black\"}}>Register</h1>\r\n      <div className='form-container'>\r\n      <div className='register-form'>\r\n      <div>\r\n      <input type=\"text\" placeholder='Email' ref={registerMail} required/><br /><br />\r\n      <input type=\"text\" placeholder='Username' ref={registerUsername} required/><br /><br />\r\n      <input type=\"password\" placeholder='Password' ref={registerPassword} required/><br /><br />\r\n      {customError? \r\n      <p style={{color: \"red\"}}>{customError}</p>:''}\r\n      <button style={{backgroundColor: \"rgb(236, 89, 138)\", border: \"none\", marginTop: \"30px\"}} onClick={handleRegister}>Register</button>\r\n      </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","D:\\React Projects\\rental-app\\rental\\src\\components\\Account.jsx",["83","84"],[],"import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\nimport { useParams } from 'react-router-dom';\r\nimport {Carousel} from 'react-bootstrap';\r\nimport {FaHome, FaRupeeSign, FaMobile, FaBed, FaPlusCircle} from 'react-icons/fa';\r\nimport '../css/Account.css';\r\n\r\nconst Account = () => {\r\n\r\n  const {id} = useParams();\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async() => {\r\n            if(id)\r\n            {\r\n              await axios.get(`http://localhost:8000/mypost/${id}`)\r\n              .then(res => {\r\n                setPosts(res.data);\r\n                console.log(res.data);\r\n              })\r\n            }\r\n            else{\r\n              window.location.href = '/home';\r\n            }\r\n    }\r\n    fetchPosts();\r\n  },[])\r\n\r\n  const deletePost = async(postId) => {\r\n    await axios.delete(`http://localhost:8000/delete-post/${postId}`)\r\n    .then(res => window.location.href = `/account/${id}`)\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div className='account-container'>\r\n      <h1>My <span style={{color: \"black\"}} >Account</span></h1>\r\n      <h3 style={{textAlign: \"center\"}} ><a href={`/account/${id}/new-post`}>Add New Post <FaPlusCircle/></a></h3>\r\n      <hr />\r\n      <div className=\"container-fluid account-details\">\r\n        <h1>Your <span style={{color: \"black\"}}>Posts</span></h1>\r\n        <div className=\"row mypost\">\r\n        {posts.map(p => (\r\n          <div className=\"card display-post col-5\">\r\n            <Carousel>\r\n            {p.imgUrl.map(i => (\r\n                  <Carousel.Item className='account-carousel-item'>\r\n                    <img src={i.url} alt=\"...\" className='carousel-img' />\r\n                  </Carousel.Item>\r\n                ))}\r\n            </Carousel>\r\n            <div className=\"card-body\">\r\n              <p><span>Location <FaHome/></span> : {p.address}</p>\r\n              <p><span>Contact Number <FaMobile/></span> : {p.mobile}</p>\r\n              <p><span>Rent <FaRupeeSign/></span> : {p.rent}</p>\r\n              <p><span>Bed Rooms <FaBed/></span> : {p.description}</p>\r\n              <button className='details-btn' onClick={() => {window.location.href = `/account/${p._id}/edit-post`}}>Edit</button><br />\r\n              <button className='details-btn' onClick={() => deletePost(p._id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        </div>\r\n      \r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Account;","D:\\React Projects\\rental-app\\rental\\src\\components\\EditPost.jsx",["85","86","87","88"],[],"import axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaFileUpload } from 'react-icons/fa';\r\nimport '../css/EditPost.css';\r\n\r\nconst EditPost = () => {\r\n\r\n    const {id} = useParams();\r\n    const [post, setPost] = useState([]);\r\n    const [user, setUser] = useState();\r\n    const [files, setFiles] = useState([]);\r\n    const [img, setImg] = useState([]);\r\n    const updatedImg = useState([]);\r\n    const doDeleteImg = useState([]);\r\n    const [customError, setCustomError] = useState();\r\n\r\n    const address = React.createRef();\r\n    const mobile = React.createRef();\r\n    const rent = React.createRef();\r\n    const description = React.createRef();\r\n\r\n    useEffect(() => {\r\n        const fetchPost= async() => {\r\n            console.log(\"Post id: \", id);\r\n            const token = sessionStorage.getItem(\"secretToken\");\r\n            console.log(token);\r\n            if(token)\r\n            {\r\n                const user = jwtDecode(token);\r\n                console.log(\"user id: \", user.currentUser);\r\n                setUser(user.currentUser);\r\n            }\r\n            else{\r\n                window.location.href = '/home';\r\n            }\r\n            await axios.get(`http://localhost:8000/specific-post/${id}`)\r\n            .then(res => {\r\n                setPost(res.data);\r\n                setImg(res.data.imgUrl);\r\n            })\r\n            .catch(err => console.log(err));\r\n        }\r\n        fetchPost()\r\n    },[])\r\n\r\n    const onFileUpload = (e) => {\r\n        setFiles(e.target.files);\r\n        if(e.target.files.length>1)\r\n        {\r\n            document.getElementById(\"filename\").innerHTML = e.target.files.length + \" files selected\";\r\n        }\r\n        else{\r\n            document.getElementById(\"filename\").innerHTML = e.target.files.length + \" file selected\";\r\n        }\r\n    }\r\n\r\n    const validation = (addressValue, mobileValue, rentValue, descriptionValue, updatedImgLength) => {\r\n        const mobilePattern = '[6789][0-9]{9}';\r\n        const rentPattern = '^[1-9]+[0-9]*$';\r\n        console.log(files.length+updatedImgLength);\r\n        let c=0;\r\n        if(files.length>0){\r\n        for(let i=0;i<files.length;i++)\r\n        {\r\n            if(files[i].type.split(\"/\")[1] !== 'jpeg' && files[i].type.split(\"/\")[1] !== 'jpg' && files[i].type.split(\"/\")[1] !== 'png')\r\n            {\r\n                setCustomError(\"*Only Image can be uploaded\");\r\n                console.log(files[i].type.split(\"/\")[1]);\r\n                c++;\r\n                return false;\r\n            }\r\n        }\r\n        }\r\n        if(c==0){\r\n        if(files.length+updatedImg == 0)\r\n        {\r\n            setCustomError(\"*Atleat 1 image is required\");\r\n            return false;\r\n        }\r\n        if(files.length+updatedImgLength>4)\r\n        {\r\n            setCustomError(\"*Only 4 Images can be uploaded\");\r\n            return false;\r\n        }\r\n        if(!addressValue)\r\n        {\r\n            setCustomError(\"*Address is required\");\r\n            return false;\r\n        }\r\n        else if(addressValue.length<10)\r\n        {\r\n            setCustomError(\"*Address should be more than 10 characters\");\r\n            return false;\r\n        }\r\n        else if(!mobileValue)\r\n        {\r\n            setCustomError(\"*Mobile Number is required\");\r\n            return false;\r\n        }\r\n        else if(!mobileValue.match(mobilePattern) || mobile.current.value.length != 10)\r\n        {\r\n            setCustomError(\"*Mobile Number should be 10 digits\");\r\n            return false;\r\n        }\r\n        else if(!rentValue)\r\n        {\r\n            setCustomError(\"*Rent is required\");\r\n            return false;\r\n        }\r\n        else if(!rentValue.match(rentPattern))\r\n        {\r\n            setCustomError(\"*Rent should not be negative\");\r\n            return false;\r\n        }\r\n        else if(!descriptionValue)\r\n        {\r\n            setCustomError(\"*Description is Required\");\r\n            return false;\r\n        }\r\n        else{\r\n            setCustomError(\" \")\r\n            return true;\r\n        }\r\n    }\r\n    }\r\n    const editPost = async(e) => {\r\n        e.preventDefault();\r\n        const addressValue = address.current.value;\r\n        const mobileValue = mobile.current.value;\r\n        const rentValue = rent.current.value;\r\n        const descriptionValue = description.current.value;\r\n        console.log(\"Clicked\");\r\n        updatedImg.length = 0;\r\n        doDeleteImg.length = 0;\r\n        const imgs = document.getElementsByName(\"deleteImg\");\r\n        for(let i=0;i<img.length;i++)\r\n        {\r\n            console.log(imgs[i].checked);\r\n            if(imgs[i].checked !== true)\r\n            {\r\n                console.log(img[i]);\r\n                updatedImg.push(img[i]);\r\n            }\r\n            else\r\n            {\r\n                doDeleteImg.push(img[i]);\r\n            }\r\n        }\r\n        console.log(doDeleteImg);\r\n        console.log(updatedImg);\r\n        let isValidated = validation(addressValue, mobileValue, rentValue, descriptionValue, updatedImg.length);\r\n        if(isValidated)\r\n        {\r\n            document.getElementById(\"btn\").value = \"Saving...\";\r\n            if(files.length>0)\r\n            {\r\n                const formData = new FormData();\r\n                for(let i=0;i<files.length;i++)\r\n                {\r\n                    formData.append(\"image\", files[i]);\r\n                }\r\n                const config = {\r\n                    headers: {\r\n                        'content-type' : 'multipart/form-data'\r\n                    }\r\n                }\r\n                await axios.post(\"http://localhost:8000/generate-url\", formData, config)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    for(let i=0;i<res.data.length;i++)\r\n                    {\r\n                        updatedImg.push({\r\n                            filename: res.data[i].filename,\r\n                            url: res.data[i].path\r\n                        });\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n            }\r\n            const newPost = {\r\n                author_id: user,\r\n                address: addressValue,\r\n                mobile: mobileValue,\r\n                rent: rentValue,\r\n                description: descriptionValue,\r\n                imgUrl: updatedImg,\r\n                date: new Date()\r\n            }\r\n            console.log(newPost);\r\n\r\n            if(doDeleteImg.length>0)\r\n            {\r\n                // FIXME: delete from cloudinary\r\n                // axios.post('http://localhost:8000/delete-img-cloudinary', doDeleteImg)\r\n                // .then(res => {\r\n                    // console.log(res);\r\n                    axios.post(`http://localhost:8000/edit-post/${id}`, newPost)\r\n                    .then(res => {\r\n                        console.log(res.data);\r\n                        window.location.href = `/account/${user}`;\r\n                    })\r\n                    .catch(err => console.log(err));\r\n            }\r\n            else\r\n            {\r\n                axios.post(`http://localhost:8000/edit-post/${id}`, newPost)\r\n                .then(res => {\r\n                    if(typeof(res.data) == 'object')\r\n                    {\r\n                        console.log(res.data);\r\n                        setCustomError(res.data.error);\r\n                    }\r\n                    else\r\n                    {\r\n                        window.location.href = `/account/${user}`;\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n            }\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className='edit-form-page'>\r\n      <h1>Edit <span style={{color: \"black\"}}>Post</span></h1>\r\n      <div className=\"edit-form-container\">\r\n      <div className='edit-post-form'>\r\n        <form action=\"\" onSubmit={editPost}>\r\n        <label for=\"uploadfile\" className='upload-label'>Select Image from device <FaFileUpload/>   <span style={{color: \"red\"}} id=\"filename\">0 file selected</span></label>\r\n        <input type=\"file\" name=\"image\" accept='image/*' id=\"uploadfile\" onChange={onFileUpload} multiple/><br /><br />\r\n        <input type=\"text\" placeholder='Address' defaultValue={post.address} ref={address}/><br /><br />\r\n        <input type=\"text\" placeholder='Mobile Number' defaultValue={post.mobile} ref={mobile}/><br /><br />\r\n        <input type=\"text\" placeholder='Rent' defaultValue={post.rent} ref={rent}/><br /><br />\r\n        <select name=\"\" id=\"\" ref={description}>\r\n            <option defaultValue={post.description}>{post.description}</option>\r\n            <option value=\"1 Bedroom\">1 Bed Room</option>\r\n            <option value=\"2 Bedroom\">2 Bed Room</option>\r\n            <option value=\"3 Bedroom\">3 Bed Room</option>\r\n            <option value=\"4 Bedroom\">4 Bed Room</option>\r\n        </select><br /><br />\r\n        {img.map((i) => (\r\n            <div className='del-img'>\r\n                <div>\r\n                <img src={i.url} alt=\"\" width={300}/><br/>\r\n                <input type=\"checkbox\" name=\"deleteImg\" id=\"\"/>\r\n                <p>Click the checkbox to delete the image</p>\r\n                </div>\r\n            </div>\r\n        ))}\r\n        {customError? <p style={{color: 'red'}}>{customError}</p>: ''}\r\n        <input type=\"submit\" value=\"Edit Post\" id='btn' style={{backgroundColor: \"rgb(236, 89, 138)\", border: \"none\"}}/>\r\n      </form>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditPost\r\n","D:\\React Projects\\rental-app\\rental\\src\\components\\CheckPin.jsx",["89","90"],[],"import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst CheckPin = () => {\r\n  const {state} = useLocation();\r\n  console.log(state);\r\n  const [userCredentials, setUserCredentials] = useState(state);\r\n  const [customError, setCustomError] = useState();\r\n  \r\n  const checkCode = React.createRef();\r\n\r\n  console.log(userCredentials.sixDigitCode);\r\n\r\n  const handleRegister = async() => {\r\n    if(checkCode.current.value == userCredentials.sixDigitCode)\r\n    {\r\n        await axios.post(\"http://localhost:8000/auth/register\", userCredentials)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          const jwt = res.data.token;\r\n          sessionStorage.setItem(\"secretToken\", jwt);\r\n          window.location.href = '/home';\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    else{\r\n        setCustomError(\"Wrong Pin\")\r\n    }\r\n  }\r\n  return (\r\n    <div style={{backgroundColor: \"#e8e8e8\" , height: \"690px\"}}>\r\n      <h3 style={{textAlign: \"center\", fontFamily: \"'Poppins', sans-serif\", fontWeight: \"bold\"}}>Enter the 6 Digit Code</h3>\r\n      <div style={{display:\"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n      {/* <h1>{userCredentials.sixDigitCode}</h1> */}\r\n      <div>\r\n      <input type=\"text\" placeholder='6 Digit Code' ref={checkCode} required style={{width: \"200px\", height: \"40px\", border: \"1px solid rgb(236, 89, 138)\", outline: \"none\", borderRadius: \"8px\", paddingLeft: \"10px\", fontFamily: \"'Poppins', sans-serif\", fontWeight: \"bold\", marginTop: \"20px\"}}/><br /><br />\r\n      {customError? <p style={{color: \"red\", fontFamily: \"'Poppins', sans-serif\", fontWeight: \"bold\" }}>{customError}</p> : ''}\r\n      <button onClick={handleRegister} style={{width: \"200px\", height: \"40px\", border: \"none\", outline: \"none\", backgroundColor: \"rgb(236, 89, 138)\", fontFamily: \"'Poppins', sans-serif\", fontWeight: \"bold\", borderRadius: \"8px\"}}>Confirm</button>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CheckPin\r\n","D:\\React Projects\\rental-app\\rental\\src\\middlewares\\postValidation.js",["91","92"],[],"D:\\React Projects\\rental-app\\rental\\src\\components\\AllPost.jsx",[],[],"D:\\React Projects\\rental-app\\rental\\src\\components\\Home.jsx",[],[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":16,"column":23,"nodeType":"99","messageId":"100","endLine":16,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":61,"column":13,"nodeType":"103","messageId":"104","endLine":61,"endColumn":15},{"ruleId":"101","severity":1,"message":"105","line":87,"column":82,"nodeType":"103","messageId":"104","endLine":87,"endColumn":84},{"ruleId":"106","severity":1,"message":"107","line":31,"column":13,"nodeType":"108","endLine":31,"endColumn":46},{"ruleId":"109","severity":1,"message":"110","line":35,"column":3,"nodeType":"111","endLine":35,"endColumn":5,"suggestions":"112"},{"ruleId":"97","severity":1,"message":"113","line":10,"column":9,"nodeType":"99","messageId":"100","endLine":10,"endColumn":16},{"ruleId":"97","severity":1,"message":"114","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},{"ruleId":"109","severity":1,"message":"110","line":29,"column":5,"nodeType":"111","endLine":29,"endColumn":7,"suggestions":"115"},{"ruleId":"109","severity":1,"message":"110","line":46,"column":7,"nodeType":"111","endLine":46,"endColumn":9,"suggestions":"116"},{"ruleId":"101","severity":1,"message":"102","line":76,"column":13,"nodeType":"103","messageId":"104","endLine":76,"endColumn":15},{"ruleId":"101","severity":1,"message":"102","line":77,"column":36,"nodeType":"103","messageId":"104","endLine":77,"endColumn":38},{"ruleId":"101","severity":1,"message":"105","line":102,"column":82,"nodeType":"103","messageId":"104","endLine":102,"endColumn":84},{"ruleId":"97","severity":1,"message":"117","line":8,"column":27,"nodeType":"99","messageId":"100","endLine":8,"endColumn":45},{"ruleId":"101","severity":1,"message":"102","line":16,"column":32,"nodeType":"103","messageId":"104","endLine":16,"endColumn":34},{"ruleId":"97","severity":1,"message":"118","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"105","line":32,"column":83,"nodeType":"103","messageId":"104","endLine":32,"endColumn":85},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'setImageLink' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["121"],"'history' is assigned a value but never used.","'jwtDecode' is defined but never used.",["122"],["123"],"'setUserCredentials' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},{"desc":"124","fix":"127"},"Update the dependencies array to be: [id]",{"range":"128","text":"129"},{"range":"130","text":"129"},{"range":"131","text":"129"},[1061,1063],"[id]",[837,839],[1544,1546]]